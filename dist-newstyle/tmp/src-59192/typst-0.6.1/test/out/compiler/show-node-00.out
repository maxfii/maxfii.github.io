--- parse tree ---
[ Code
    "test/typ/compiler/show-node-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compiler/show-node-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/show-node-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/compiler/show-node-00.typ"
    ( line 3 , column 2 )
    (Show
       (Just (Ident (Identifier "list")))
       (FuncExpr
          [ NormalParam (Identifier "it") ]
          (Plus
             (Plus
                (Literal (String "("))
                (FuncCall
                   (FieldAccess
                      (Ident (Identifier "join"))
                      (FuncCall
                         (FieldAccess
                            (Ident (Identifier "map"))
                            (FieldAccess
                               (Ident (Identifier "children")) (Ident (Identifier "it"))))
                         [ NormalArg
                             (FuncExpr
                                [ NormalParam (Identifier "v") ]
                                (FieldAccess (Ident (Identifier "body")) (Ident (Identifier "v"))))
                         ]))
                   [ NormalArg (Literal (String ", ")) ]))
             (Literal (String ")")))))
, ParBreak
, BulletListItem
    [ Text "A"
    , SoftBreak
    , BulletListItem [ Text "B" ]
    , SoftBreak
    , BulletListItem [ Text "C" ]
    ]
, SoftBreak
, BulletListItem [ Text "D" ]
, SoftBreak
, BulletListItem [ Text "E" , ParBreak ]
]
"test/typ/compiler/show-node-00.typ" (line 3, column 2):
unexpected end of input
Content does not have a method "body" or FieldAccess requires a dictionary
