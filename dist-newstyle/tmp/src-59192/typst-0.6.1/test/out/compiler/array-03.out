--- parse tree ---
[ Code
    "test/typ/compiler/array-03.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compiler/array-03.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/array-03.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/compiler/array-03.typ"
    ( line 3 , column 2 )
    (Block
       (CodeBlock
          [ Let
              (BasicBind (Just (Identifier "array")))
              (Array
                 [ Reg (Literal (Int 1))
                 , Reg (Literal (Int 2))
                 , Reg (Literal (Int 3))
                 ])
          , Assign
              (FuncCall
                 (FieldAccess
                    (Ident (Identifier "first")) (Ident (Identifier "array")))
                 [])
              (Literal (Int 7))
          , Assign
              (FuncCall
                 (FieldAccess
                    (Ident (Identifier "at")) (Ident (Identifier "array")))
                 [ NormalArg (Literal (Int 1)) ])
              (Times
                 (FuncCall
                    (FieldAccess
                       (Ident (Identifier "at")) (Ident (Identifier "array")))
                    [ NormalArg (Literal (Int 1)) ])
                 (Literal (Int 8)))
          , FuncCall
              (Ident (Identifier "test"))
              [ NormalArg (Ident (Identifier "array"))
              , NormalArg
                  (Array
                     [ Reg (Literal (Int 7))
                     , Reg (Literal (Int 16))
                     , Reg (Literal (Int 3))
                     ])
              ]
          ]))
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [âœ…]), 
                 parbreak() })
