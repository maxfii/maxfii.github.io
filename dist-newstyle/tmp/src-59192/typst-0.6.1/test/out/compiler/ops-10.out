--- parse tree ---
[ Code
    "test/typ/compiler/ops-10.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compiler/ops-10.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/ops-10.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 4 , column 2 )
    (Let (BasicBind (Just (Identifier "x"))) (Literal (Int 0)))
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 5 , column 2 )
    (Assign (Ident (Identifier "x")) (Literal (Int 10)))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 5 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (Int 10))
       ])
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 6 , column 2 )
    (Assign
       (Ident (Identifier "x"))
       (Minus (Ident (Identifier "x")) (Literal (Int 5))))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 6 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (Int 5))
       ])
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 7 , column 2 )
    (Assign
       (Ident (Identifier "x"))
       (Plus (Ident (Identifier "x")) (Literal (Int 1))))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 7 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (Int 6))
       ])
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 8 , column 2 )
    (Assign
       (Ident (Identifier "x"))
       (Times (Ident (Identifier "x")) (Ident (Identifier "x"))))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 8 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (Int 36))
       ])
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 9 , column 2 )
    (Assign
       (Ident (Identifier "x"))
       (Divided (Ident (Identifier "x")) (Literal (Float 2.0))))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 9 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (Float 18.0))
       ])
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 10 , column 2 )
    (Assign (Ident (Identifier "x")) (Literal (String "some")))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 10 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (String "some"))
       ])
, SoftBreak
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 11 , column 2 )
    (Assign
       (Ident (Identifier "x"))
       (Plus (Ident (Identifier "x")) (Literal (String "thing"))))
, Space
, Code
    "test/typ/compiler/ops-10.typ"
    ( line 11 , column 18 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (Ident (Identifier "x"))
       , NormalArg (Literal (String "something"))
       ])
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 text(body: [
]), 
                 text(body: [ ]), 
                 text(body: [✅]), 
                 parbreak() })
