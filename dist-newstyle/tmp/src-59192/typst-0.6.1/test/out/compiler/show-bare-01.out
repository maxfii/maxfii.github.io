--- parse tree ---
[ Code
    "test/typ/compiler/show-bare-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compiler/show-bare-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/show-bare-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Text "A"
, Space
, Code
    "test/typ/compiler/show-bare-01.typ"
    ( line 3 , column 4 )
    (Block
       (Content
          [ Emph
              [ Text "B"
              , Space
              , Code
                  "test/typ/compiler/show-bare-01.typ"
                  ( line 3 , column 9 )
                  (Show
                     Nothing
                     (FuncExpr
                        [ NormalParam (Identifier "c") ]
                        (Block
                           (Content
                              [ Strong
                                  [ Code
                                      "test/typ/compiler/show-bare-01.typ"
                                      ( line 3 , column 23 )
                                      (Ident (Identifier "c"))
                                  ]
                              ]))))
              , Space
              , Text "C"
              ]
          ]))
, Space
, Text "D"
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [A ]), 
                 emph(body: { text(body: [B ]), 
                              strong(body: text(body: [ C])) }), 
                 text(body: [ D]), 
                 parbreak() })
