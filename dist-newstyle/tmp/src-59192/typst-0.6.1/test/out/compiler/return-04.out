--- parse tree ---
[ Code
    "test/typ/compiler/return-04.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compiler/return-04.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/return-04.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/compiler/return-04.typ"
    ( line 3 , column 2 )
    (LetFunc
       (Identifier "sum")
       [ SinkParam (Just (Identifier "args")) ]
       (Block
          (CodeBlock
             [ Let (BasicBind (Just (Identifier "s"))) (Literal (Int 0))
             , For
                 (BasicBind (Just (Identifier "v")))
                 (FuncCall
                    (FieldAccess
                       (Ident (Identifier "pos")) (Ident (Identifier "args")))
                    [])
                 (Block
                    (CodeBlock
                       [ Assign
                           (Ident (Identifier "s"))
                           (Plus (Ident (Identifier "s")) (Ident (Identifier "v")))
                       ]))
             , Ident (Identifier "s")
             ])))
, ParBreak
, Code
    "test/typ/compiler/return-04.typ"
    ( line 11 , column 2 )
    (LetFunc
       (Identifier "f")
       []
       (Block
          (CodeBlock
             [ FuncCall
                 (Ident (Identifier "sum"))
                 [ SpreadArg (Return Nothing)
                 , NormalArg (Literal (Int 1))
                 , NormalArg (Literal (Int 2))
                 , NormalArg (Literal (Int 3))
                 ]
             , Literal (String "nope")
             ])))
, ParBreak
, Code
    "test/typ/compiler/return-04.typ"
    ( line 16 , column 2 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg (FuncCall (Ident (Identifier "f")) [])
       , NormalArg (Literal (Int 6))
       ])
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 parbreak(), 
                 parbreak(), 
                 text(body: [âœ…]), 
                 parbreak() })
