--- parse tree ---
[ Code
    "test/typ/compiler/spread-12.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compiler/spread-12.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/spread-12.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/compiler/spread-12.typ"
    ( line 3 , column 2 )
    (Block
       (CodeBlock
          [ LetFunc
              (Identifier "f")
              [ SinkParam (Just (Identifier "a"))
              , NormalParam (Identifier "b")
              ]
              (Array
                 [ Reg (Ident (Identifier "a")) , Reg (Ident (Identifier "b")) ])
          , FuncCall
              (Ident (Identifier "test"))
              [ NormalArg
                  (FuncCall
                     (Ident (Identifier "repr"))
                     [ NormalArg
                         (FuncCall (Ident (Identifier "f")) [ NormalArg (Literal (Int 1)) ])
                     ])
              , NormalArg (Literal (String "((), 1)"))
              ]
          , FuncCall
              (Ident (Identifier "test"))
              [ NormalArg
                  (FuncCall
                     (Ident (Identifier "repr"))
                     [ NormalArg
                         (FuncCall
                            (Ident (Identifier "f"))
                            [ NormalArg (Literal (Int 1))
                            , NormalArg (Literal (Int 2))
                            , NormalArg (Literal (Int 3))
                            ])
                     ])
              , NormalArg (Literal (String "((1, 2), 3)"))
              ]
          , FuncCall
              (Ident (Identifier "test"))
              [ NormalArg
                  (FuncCall
                     (Ident (Identifier "repr"))
                     [ NormalArg
                         (FuncCall
                            (Ident (Identifier "f"))
                            [ NormalArg (Literal (Int 1))
                            , NormalArg (Literal (Int 2))
                            , NormalArg (Literal (Int 3))
                            , NormalArg (Literal (Int 4))
                            , NormalArg (Literal (Int 5))
                            ])
                     ])
              , NormalArg (Literal (String "((1, 2, 3, 4), 5)"))
              ]
          ]))
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [✅]), 
                 text(body: [✅]), 
                 text(body: [✅]), 
                 parbreak() })
