--- parse tree ---
[ Code
    "test/typ/visualize/line-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/visualize/line-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/visualize/line-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Code
    "test/typ/visualize/line-00.typ"
    ( line 2 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "height") (Literal (Numeric 60.0 Pt)) ])
, SoftBreak
, Code
    "test/typ/visualize/line-00.typ"
    ( line 3 , column 2 )
    (FuncCall
       (Ident (Identifier "box"))
       [ NormalArg
           (Block
              (CodeBlock
                 [ Set
                     (Ident (Identifier "line"))
                     [ KeyValArg (Identifier "stroke") (Literal (Numeric 0.75 Pt)) ]
                 , FuncCall
                     (Ident (Identifier "place"))
                     [ NormalArg
                         (FuncCall
                            (Ident (Identifier "line"))
                            [ KeyValArg
                                (Identifier "end")
                                (Array
                                   [ Reg (Literal (Numeric 0.4 Em))
                                   , Reg (Literal (Numeric 0.0 Pt))
                                   ])
                            ])
                     ]
                 , FuncCall
                     (Ident (Identifier "place"))
                     [ NormalArg
                         (FuncCall
                            (Ident (Identifier "line"))
                            [ KeyValArg
                                (Identifier "start")
                                (Array
                                   [ Reg (Literal (Numeric 0.0 Pt))
                                   , Reg (Literal (Numeric 0.4 Em))
                                   ])
                            , KeyValArg
                                (Identifier "end")
                                (Array
                                   [ Reg (Literal (Numeric 0.0 Pt))
                                   , Reg (Literal (Numeric 0.0 Pt))
                                   ])
                            ])
                     ]
                 , FuncCall
                     (Ident (Identifier "line"))
                     [ KeyValArg
                         (Identifier "end")
                         (Array
                            [ Reg (Literal (Numeric 0.6 Em))
                            , Reg (Literal (Numeric 0.6 Em))
                            ])
                     ]
                 ]))
       ])
, Space
, Text "Hello"
, Space
, Code
    "test/typ/visualize/line-00.typ"
    ( line 8 , column 11 )
    (FuncCall
       (Ident (Identifier "box"))
       [ NormalArg
           (FuncCall
              (Ident (Identifier "line"))
              [ KeyValArg (Identifier "length") (Literal (Numeric 1.0 Cm)) ])
       ])
, Text "!"
, ParBreak
, Code
    "test/typ/visualize/line-00.typ"
    ( line 10 , column 2 )
    (FuncCall
       (Ident (Identifier "line"))
       [ KeyValArg
           (Identifier "end")
           (Array
              [ Reg (Literal (Numeric 70.0 Percent))
              , Reg (Literal (Numeric 50.0 Percent))
              ])
       ])
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
]), 
                 box(body: { place(body: line(end: (0.4em, 
                                                    0.0pt), 
                                              stroke: 0.75pt)), 
                             place(body: line(end: (0.0pt, 
                                                    0.0pt), 
                                              start: (0.0pt, 
                                                      0.4em), 
                                              stroke: 0.75pt)), 
                             line(end: (0.6em, 0.6em), 
                                  stroke: 0.75pt) }), 
                 text(body: [ Hello ]), 
                 box(body: line(length: 1.0cm)), 
                 text(body: [!]), 
                 parbreak(), 
                 line(end: (70%, 50%)), 
                 parbreak() })
