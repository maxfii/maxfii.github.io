--- parse tree ---
[ Code
    "test/typ/visualize/shape-circle-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/visualize/shape-circle-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/visualize/shape-circle-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/visualize/shape-circle-01.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "circle"))
       [ KeyValArg (Identifier "inset") (Literal (Numeric 0.0 Pt)) ])
, ParBreak
, Text "Auto"
, Text "-"
, Text "sized"
, Space
, Text "circle"
, Text "."
, SoftBreak
, Code
    "test/typ/visualize/shape-circle-01.typ"
    ( line 6 , column 2 )
    (FuncCall
       (Ident (Identifier "circle"))
       [ KeyValArg
           (Identifier "fill")
           (FuncCall
              (Ident (Identifier "rgb"))
              [ NormalArg (Literal (String "eb5278")) ])
       , KeyValArg
           (Identifier "stroke")
           (Plus (Literal (Numeric 2.0 Pt)) (Ident (Identifier "black")))
       , NormalArg
           (FuncCall
              (Ident (Identifier "align"))
              [ NormalArg
                  (Plus (Ident (Identifier "center")) (Ident (Identifier "horizon")))
              , BlockArg [ Text "But," , Space , Text "soft!" ]
              ])
       ])
, ParBreak
, Text "Center"
, Text "-"
, Text "aligned"
, Space
, Text "rect"
, Space
, Text "in"
, Space
, Text "auto"
, Text "-"
, Text "sized"
, Space
, Text "circle"
, Text "."
, SoftBreak
, Code
    "test/typ/visualize/shape-circle-01.typ"
    ( line 11 , column 2 )
    (FuncCall
       (Ident (Identifier "circle"))
       [ KeyValArg (Identifier "fill") (Ident (Identifier "red"))
       , KeyValArg (Identifier "stroke") (Ident (Identifier "green"))
       , NormalArg
           (FuncCall
              (Ident (Identifier "align"))
              [ NormalArg
                  (Plus (Ident (Identifier "center")) (Ident (Identifier "horizon")))
              , NormalArg
                  (FuncCall
                     (Ident (Identifier "rect"))
                     [ KeyValArg (Identifier "fill") (Ident (Identifier "green"))
                     , KeyValArg (Identifier "inset") (Literal (Numeric 5.0 Pt))
                     , BlockArg [ Text "But," , Space , Text "soft!" ]
                     ])
              ])
       ])
, ParBreak
, Text "Rect"
, Space
, Text "in"
, Space
, Text "auto"
, Text "-"
, Text "sized"
, Space
, Text "circle"
, Text "."
, SoftBreak
, Code
    "test/typ/visualize/shape-circle-01.typ"
    ( line 18 , column 2 )
    (FuncCall
       (Ident (Identifier "circle"))
       [ KeyValArg (Identifier "fill") (Ident (Identifier "red"))
       , NormalArg
           (FuncCall
              (Ident (Identifier "rect"))
              [ KeyValArg (Identifier "fill") (Ident (Identifier "green"))
              , KeyValArg (Identifier "stroke") (Ident (Identifier "white"))
              , KeyValArg (Identifier "inset") (Literal (Numeric 4.0 Pt))
              , BlockArg
                  [ SoftBreak
                  , Code
                      "test/typ/visualize/shape-circle-01.typ"
                      ( line 20 , column 6 )
                      (Set
                         (Ident (Identifier "text"))
                         [ NormalArg (Literal (Numeric 8.0 Pt)) ])
                  , SoftBreak
                  , Text "But,"
                  , Space
                  , Text "soft!"
                  , Space
                  , Text "what"
                  , Space
                  , Text "light"
                  , Space
                  , Text "through"
                  , Space
                  , Text "yonder"
                  , Space
                  , Text "window"
                  , Space
                  , Text "breaks?"
                  , ParBreak
                  ]
              ])
       ])
, ParBreak
, Text "Expanded"
, Space
, Text "by"
, Space
, Text "height"
, Text "."
, SoftBreak
, Code
    "test/typ/visualize/shape-circle-01.typ"
    ( line 26 , column 2 )
    (FuncCall
       (Ident (Identifier "circle"))
       [ KeyValArg (Identifier "stroke") (Ident (Identifier "black"))
       , NormalArg
           (FuncCall
              (Ident (Identifier "align"))
              [ NormalArg (Ident (Identifier "center"))
              , BlockArg
                  [ Text "A"
                  , Space
                  , HardBreak
                  , Text "B"
                  , Space
                  , HardBreak
                  , Text "C"
                  ]
              ])
       ])
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 parbreak(), 
                 text(body: [Auto-sized circle.
]), 
                 circle(body: align(alignment: Axes(center, horizon), 
                                    body: text(body: [But, soft!])), 
                        fill: rgb(92%,32%,47%,100%), 
                        inset: 0.0pt, 
                        stroke: (thickness: 2.0pt,
                                 color: rgb(0%,0%,0%,100%))), 
                 parbreak(), 
                 text(body: [Center-aligned rect in auto-sized circle.
]), 
                 circle(body: align(alignment: Axes(center, horizon), 
                                    body: rect(body: text(body: [But, soft!]), 
                                               fill: rgb(18%,80%,25%,100%), 
                                               inset: 5.0pt)), 
                        fill: rgb(100%,25%,21%,100%), 
                        inset: 0.0pt, 
                        stroke: rgb(18%,80%,25%,100%)), 
                 parbreak(), 
                 text(body: [Rect in auto-sized circle.
]), 
                 circle(body: rect(body: { text(body: [
]), 
                                           text(body: [
But, soft! what light through yonder window breaks?], 
                                                size: 8.0pt), 
                                           parbreak() }, 
                                   fill: rgb(18%,80%,25%,100%), 
                                   inset: 4.0pt, 
                                   stroke: rgb(100%,100%,100%,100%)), 
                        fill: rgb(100%,25%,21%,100%), 
                        inset: 0.0pt), 
                 parbreak(), 
                 text(body: [Expanded by height.
], 
                      size: 8.0pt), 
                 circle(body: align(alignment: center, 
                                    body: { text(body: [A ], 
                                                 size: 8.0pt), 
                                            linebreak(), 
                                            text(body: [B ], 
                                                 size: 8.0pt), 
                                            linebreak(), 
                                            text(body: [C], 
                                                 size: 8.0pt) }), 
                        inset: 0.0pt, 
                        stroke: rgb(0%,0%,0%,100%)), 
                 parbreak() })
