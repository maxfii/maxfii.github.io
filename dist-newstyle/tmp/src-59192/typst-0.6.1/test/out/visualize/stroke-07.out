--- parse tree ---
[ Code
    "test/typ/visualize/stroke-07.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/visualize/stroke-07.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/visualize/stroke-07.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, SoftBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 4 , column 2 )
    (FuncCall
       (Ident (Identifier "rect"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "height") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "stroke") (Literal None)
       ])
, SoftBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 5 , column 2 )
    (FuncCall
       (Ident (Identifier "rect"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "height") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "stroke") (Literal (Numeric 0.0 Pt))
       ])
, SoftBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 6 , column 2 )
    (FuncCall
       (Ident (Identifier "rect"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "height") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "stroke") (Literal None)
       , KeyValArg (Identifier "fill") (Ident (Identifier "blue"))
       ])
, SoftBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 7 , column 2 )
    (FuncCall
       (Ident (Identifier "rect"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 10.0 Pt))
       , KeyValArg (Identifier "height") (Literal (Numeric 10.0 Pt))
       , KeyValArg
           (Identifier "stroke")
           (Plus (Literal (Numeric 0.0 Pt)) (Ident (Identifier "red")))
       , KeyValArg (Identifier "fill") (Ident (Identifier "blue"))
       ])
, ParBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 9 , column 2 )
    (FuncCall
       (Ident (Identifier "line"))
       [ KeyValArg (Identifier "length") (Literal (Numeric 30.0 Pt))
       , KeyValArg (Identifier "stroke") (Literal (Numeric 0.0 Pt))
       ])
, SoftBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 10 , column 2 )
    (FuncCall
       (Ident (Identifier "line"))
       [ KeyValArg (Identifier "length") (Literal (Numeric 30.0 Pt))
       , KeyValArg
           (Identifier "stroke")
           (Dict
              [ Reg ( Ident (Identifier "paint") , Ident (Identifier "red") )
              , Reg ( Ident (Identifier "thickness") , Literal (Numeric 0.0 Pt) )
              , Reg
                  ( Ident (Identifier "dash")
                  , Array
                      [ Reg (Literal (String "dot")) , Reg (Literal (Numeric 1.0 Pt)) ]
                  )
              ])
       ])
, ParBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 12 , column 2 )
    (FuncCall
       (Ident (Identifier "table"))
       [ KeyValArg (Identifier "columns") (Literal (Int 2))
       , KeyValArg (Identifier "stroke") (Literal None)
       , BlockArg [ Text "A" ]
       , BlockArg [ Text "B" ]
       ])
, SoftBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 13 , column 2 )
    (FuncCall
       (Ident (Identifier "table"))
       [ KeyValArg (Identifier "columns") (Literal (Int 2))
       , KeyValArg (Identifier "stroke") (Literal (Numeric 0.0 Pt))
       , BlockArg [ Text "A" ]
       , BlockArg [ Text "B" ]
       ])
, ParBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 15 , column 2 )
    (FuncCall
       (Ident (Identifier "path"))
       [ KeyValArg (Identifier "fill") (Ident (Identifier "red"))
       , KeyValArg (Identifier "stroke") (Literal None)
       , KeyValArg (Identifier "closed") (Literal (Boolean True))
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 0.0 Percent))
                     , Reg (Literal (Numeric 0.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Negated (Literal (Numeric 4.0 Percent)))
                     ])
              ])
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 50.0 Percent))
                     , Reg (Literal (Numeric 50.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Negated (Literal (Numeric 4.0 Percent)))
                     ])
              ])
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 0.0 Percent))
                     , Reg (Literal (Numeric 50.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Literal (Numeric 4.0 Percent))
                     ])
              ])
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 50.0 Percent))
                     , Reg (Literal (Numeric 0.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Literal (Numeric 4.0 Percent))
                     ])
              ])
       ])
, ParBreak
, Code
    "test/typ/visualize/stroke-07.typ"
    ( line 25 , column 2 )
    (FuncCall
       (Ident (Identifier "path"))
       [ KeyValArg (Identifier "fill") (Ident (Identifier "red"))
       , KeyValArg (Identifier "stroke") (Literal (Numeric 0.0 Pt))
       , KeyValArg (Identifier "closed") (Literal (Boolean True))
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 0.0 Percent))
                     , Reg (Literal (Numeric 0.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Negated (Literal (Numeric 4.0 Percent)))
                     ])
              ])
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 50.0 Percent))
                     , Reg (Literal (Numeric 50.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Negated (Literal (Numeric 4.0 Percent)))
                     ])
              ])
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 0.0 Percent))
                     , Reg (Literal (Numeric 50.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Literal (Numeric 4.0 Percent))
                     ])
              ])
       , NormalArg
           (Array
              [ Reg
                  (Array
                     [ Reg (Literal (Numeric 50.0 Percent))
                     , Reg (Literal (Numeric 0.0 Percent))
                     ])
              , Reg
                  (Array
                     [ Reg (Literal (Numeric 4.0 Percent))
                     , Reg (Literal (Numeric 4.0 Percent))
                     ])
              ])
       ])
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
]), 
                 rect(height: 10.0pt, 
                      stroke: none, 
                      width: 10.0pt), 
                 text(body: [
]), 
                 rect(height: 10.0pt, 
                      stroke: 0.0pt, 
                      width: 10.0pt), 
                 text(body: [
]), 
                 rect(fill: rgb(0%,45%,85%,100%), 
                      height: 10.0pt, 
                      stroke: none, 
                      width: 10.0pt), 
                 text(body: [
]), 
                 rect(fill: rgb(0%,45%,85%,100%), 
                      height: 10.0pt, 
                      stroke: (thickness: 0.0pt,
                               color: rgb(100%,25%,21%,100%)), 
                      width: 10.0pt), 
                 parbreak(), 
                 line(length: 30.0pt, 
                      stroke: 0.0pt), 
                 text(body: [
]), 
                 line(length: 30.0pt, 
                      stroke: (paint: rgb(100%,25%,21%,100%),
                               thickness: 0.0pt,
                               dash: ("dot", 1.0pt))), 
                 parbreak(), 
                 table(children: (text(body: [A]), 
                                  text(body: [B])), 
                       columns: 2, 
                       stroke: none), 
                 text(body: [
]), 
                 table(children: (text(body: [A]), 
                                  text(body: [B])), 
                       columns: 2, 
                       stroke: 0.0pt), 
                 parbreak(), 
                 path(closed: true, 
                      fill: rgb(100%,25%,21%,100%), 
                      stroke: none, 
                      vertices: (((0%, 0%), 
                                  (4%, -4%)), 
                                 ((50%, 50%), (4%, -4%)), 
                                 ((0%, 50%), (4%, 4%)), 
                                 ((50%, 0%), (4%, 4%)))), 
                 parbreak(), 
                 path(closed: true, 
                      fill: rgb(100%,25%,21%,100%), 
                      stroke: 0.0pt, 
                      vertices: (((0%, 0%), 
                                  (4%, -4%)), 
                                 ((50%, 50%), (4%, -4%)), 
                                 ((0%, 50%), (4%, 4%)), 
                                 ((50%, 0%), (4%, 4%)))), 
                 parbreak() })
