--- parse tree ---
[ Code
    "test/typ/math/spacing-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/spacing-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/spacing-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    False
    [ Text "f"
    , MGroup (Just "(") (Just ")") [ Text "x" ]
    , Text ","
    , MGroup
        Nothing
        Nothing
        [ Text "f" , MGroup (Just "(") (Just ")") [ Text "x" ] ]
    ]
, Space
, HardBreak
, Equation
    False
    [ MGroup (Just "[") (Just "]") [ Text "a" , Text "|" , Text "b" ]
    , Text ","
    , MGroup
        (Just "[")
        (Just "]")
        [ Text "a"
        , MGroup Nothing Nothing [ Nbsp , Text "|" , Nbsp ]
        , Text "b"
        ]
    ]
, Space
, HardBreak
, Equation
    False
    [ Text "a"
    , Text "is"
    , Text "b"
    , Text ","
    , Text "a"
    , Text " is "
    , Text "b"
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 math.equation(block: false, 
                               body: { text(body: [f]), 
                                       math.lr(body: ({ [(], 
                                                        text(body: [x]), 
                                                        [)] })), 
                                       text(body: [,]), 
                                       text(body: [f]), 
                                       math.lr(body: ({ [(], 
                                                        text(body: [x]), 
                                                        [)] })) }, 
                               numbering: none), 
                 text(body: [ ]), 
                 linebreak(), 
                 math.equation(block: false, 
                               body: { math.lr(body: ({ [[], 
                                                        text(body: [a]), 
                                                        text(body: [|]), 
                                                        text(body: [b]), 
                                                        []] })), 
                                       text(body: [,]), 
                                       math.lr(body: ({ [[], 
                                                        text(body: [a]), 
                                                        text(body: [ ]), 
                                                        text(body: [|]), 
                                                        text(body: [ ]), 
                                                        text(body: [b]), 
                                                        []] })) }, 
                               numbering: none), 
                 text(body: [ ]), 
                 linebreak(), 
                 math.equation(block: false, 
                               body: { text(body: [a]), 
                                       text(body: [is]), 
                                       text(body: [b]), 
                                       text(body: [,]), 
                                       text(body: [a]), 
                                       text(body: [ is ]), 
                                       text(body: [b]) }, 
                               numbering: none), 
                 parbreak() })
