--- parse tree ---
[ Code
    "test/typ/math/delimited-08.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/delimited-08.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/delimited-08.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ Code
        "test/typ/math/delimited-08.typ"
        ( line 3 , column 3 )
        (FuncCall
           (Ident (Identifier "lr"))
           [ BlockArg
               [ Code
                   "test/typ/math/delimited-08.typ"
                   ( line 4 , column 5 )
                   (FuncCall
                      (Ident (Identifier "text"))
                      [ BlockArg [ Text "(" ]
                      , KeyValArg (Identifier "fill") (Ident (Identifier "green"))
                      ])
               , MFrac (Text "a") (Text "b")
               , Code
                   "test/typ/math/delimited-08.typ"
                   ( line 5 , column 5 )
                   (FuncCall
                      (Ident (Identifier "text"))
                      [ BlockArg [ Text ")" ]
                      , KeyValArg (Identifier "fill") (Ident (Identifier "blue"))
                      ])
               ]
           ])
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 math.equation(block: true, 
                               body: math.lr(body: ({ text(body: text(body: [(]), 
                                                           fill: rgb(18%,80%,25%,100%)), 
                                                      math.frac(denom: text(body: [b]), 
                                                                num: text(body: [a])), 
                                                      text(body: text(body: [)]), 
                                                           fill: rgb(0%,45%,85%,100%)) })), 
                               numbering: none), 
                 parbreak() })
