--- parse tree ---
[ Code
    "test/typ/math/multiline-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/multiline-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/multiline-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ Text "x"
    , MAlignPoint
    , Text "="
    , Text "x"
    , Text "+"
    , Text "y"
    , HardBreak
    , MAlignPoint
    , Text "="
    , Text "x"
    , Text "+"
    , Text "2"
    , Text "z"
    , HardBreak
    , MAlignPoint
    , Text "="
    , Code
        "test/typ/math/multiline-00.typ"
        ( line 5 , column 8 )
        (Ident (Identifier "sum"))
    , Text "x"
    , Code
        "test/typ/math/multiline-00.typ"
        ( line 5 , column 14 )
        (Ident (Identifier "dot"))
    , Text "2"
    , Text "z"
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 math.equation(block: true, 
                               body: { text(body: [x]), 
                                       math.alignpoint(), 
                                       text(body: [=]), 
                                       text(body: [x]), 
                                       text(body: [+]), 
                                       text(body: [y]), 
                                       linebreak(), 
                                       math.alignpoint(), 
                                       text(body: [=]), 
                                       text(body: [x]), 
                                       text(body: [+]), 
                                       text(body: [2]), 
                                       text(body: [z]), 
                                       linebreak(), 
                                       math.alignpoint(), 
                                       text(body: [=]), 
                                       text(body: [∑]), 
                                       text(body: [x]), 
                                       text(body: [⋅]), 
                                       text(body: [2]), 
                                       text(body: [z]) }, 
                               numbering: none), 
                 parbreak() })
