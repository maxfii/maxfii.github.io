--- parse tree ---
[ Code
    "test/typ/math/delimited-07.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/delimited-07.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/delimited-07.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    False
    [ Code
        "test/typ/math/delimited-07.typ"
        ( line 3 , column 2 )
        (FuncCall
           (Ident (Identifier "floor"))
           [ BlockArg [ MFrac (Text "x") (Text "2") ] ])
    , Text ","
    , Code
        "test/typ/math/delimited-07.typ"
        ( line 3 , column 14 )
        (FuncCall
           (Ident (Identifier "ceil"))
           [ BlockArg [ MFrac (Text "x") (Text "2") ] ])
    , Text ","
    , Code
        "test/typ/math/delimited-07.typ"
        ( line 3 , column 25 )
        (FuncCall (Ident (Identifier "abs")) [ BlockArg [ Text "x" ] ])
    , Text ","
    , Code
        "test/typ/math/delimited-07.typ"
        ( line 3 , column 33 )
        (FuncCall (Ident (Identifier "norm")) [ BlockArg [ Text "x" ] ])
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 math.equation(block: false, 
                               body: { math.floor(body: math.frac(denom: text(body: [2]), 
                                                                  num: text(body: [x]))), 
                                       text(body: [,]), 
                                       math.ceil(body: math.frac(denom: text(body: [2]), 
                                                                 num: text(body: [x]))), 
                                       text(body: [,]), 
                                       math.abs(body: text(body: [x])), 
                                       text(body: [,]), 
                                       math.norm(body: text(body: [x])) }, 
                               numbering: none), 
                 parbreak() })
