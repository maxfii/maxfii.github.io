--- parse tree ---
[ Code
    "test/typ/math/style-06.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/style-06.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/style-06.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/math/style-06.typ"
    ( line 3 , column 2 )
    (Show
       (Just
          (FieldAccess
             (Ident (Identifier "tack")) (Ident (Identifier "sym"))))
       (FuncExpr
          [ NormalParam (Identifier "it") ]
          (Block
             (Content
                [ Equation
                    False
                    [ Code
                        "test/typ/math/style-06.typ"
                        ( line 3 , column 25 )
                        (FuncCall
                           (Ident (Identifier "h")) [ NormalArg (Literal (Numeric 1.0 Em)) ])
                    , Code
                        "test/typ/math/style-06.typ"
                        ( line 3 , column 32 )
                        (Ident (Identifier "it"))
                    , Code
                        "test/typ/math/style-06.typ"
                        ( line 3 , column 36 )
                        (FuncCall
                           (Ident (Identifier "h")) [ NormalArg (Literal (Numeric 1.0 Em)) ])
                    ]
                ]))))
, SoftBreak
, Equation
    True
    [ Text "a"
    , Code
        "test/typ/math/style-06.typ"
        ( line 4 , column 5 )
        (Ident (Identifier "tack"))
    , Text "b"
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
]), 
                 math.equation(block: true, 
                               body: { text(body: [a]), 
                                       math.equation(block: false, 
                                                     body: { h(amount: 1.0em), 
                                                             text(body: { [], 
                                                                          math.equation(block: false, 
                                                                                        body: { h(amount: 1.0em), 
                                                                                                text(body: [‚ä¢]), 
                                                                                                h(amount: 1.0em) }, 
                                                                                        numbering: none), 
                                                                          [] }), 
                                                             h(amount: 1.0em) }, 
                                                     numbering: none), 
                                       text(body: [b]) }, 
                               numbering: none), 
                 parbreak() })
