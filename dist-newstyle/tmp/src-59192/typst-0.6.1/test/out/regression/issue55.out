--- parse tree ---
[ Code
    "test/typ/regression/issue55.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/regression/issue55.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/regression/issue55.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Equation
    True
    [ MGroup (Just "(") (Just ")") [ Text "b" ]
    , MFrac
        (MGroup (Just "(") (Just ")") [ Text "c" ])
        (MGroup Nothing Nothing [ Text "d" ])
    , Text "!"
    , MFrac
        (MGroup (Just "(") (Just ")") [ Text "a" ])
        (MGroup Nothing Nothing [ Text "b" ])
    , MGroup Nothing Nothing [ HardBreak , Text "!" ]
    , MFrac
        (MGroup (Just "(") (Just ")") [ Text "a" ])
        (MGroup Nothing Nothing [ Text "b" ])
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 math.equation(block: true, 
                               body: { math.lr(body: ({ [(], 
                                                        text(body: [b]), 
                                                        [)] })), 
                                       math.frac(denom: text(body: [d]), 
                                                 num: text(body: [c])), 
                                       text(body: [!]), 
                                       math.frac(denom: text(body: [b]), 
                                                 num: text(body: [a])), 
                                       linebreak(), 
                                       text(body: [!]), 
                                       math.frac(denom: text(body: [b]), 
                                                 num: text(body: [a])) }, 
                               numbering: none), 
                 parbreak() })
