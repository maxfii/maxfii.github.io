--- parse tree ---
[ Code
    "test/typ/regression/issue2.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/regression/issue2.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/regression/issue2.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Equation
    False
    [ Code
        "test/typ/regression/issue2.typ"
        ( line 2 , column 2 )
        (FuncCall
           (Ident (Identifier "lr"))
           [ BlockArg
               [ Code
                   "test/typ/regression/issue2.typ"
                   ( line 2 , column 6 )
                   (FieldAccess
                      (Ident (Identifier "alpha")) (Ident (Identifier "sym")))
               , Code
                   "test/typ/regression/issue2.typ"
                   ( line 2 , column 16 )
                   (FieldAccess
                      (Ident (Identifier "beta")) (Ident (Identifier "sym")))
               ]
           ])
    ]
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 math.equation(block: false, 
                               body: math.lr(body: ({ text(body: [α]), 
                                                      text(body: [β]) })), 
                               numbering: none), 
                 parbreak() })
