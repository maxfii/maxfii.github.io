--- parse tree ---
[ Code
    "test/typ/layout/place-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/place-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/place-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/layout/place-01.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ NormalArg (Literal (String "a8"))
       , KeyValArg (Identifier "height") (Literal (Numeric 60.0 Pt))
       ])
, ParBreak
, Text "First"
, ParBreak
, Code
    "test/typ/layout/place-01.typ"
    ( line 7 , column 2 )
    (FuncCall
       (Ident (Identifier "place"))
       [ NormalArg
           (Plus (Ident (Identifier "bottom")) (Ident (Identifier "right")))
       , BlockArg [ Text "Placed" ]
       ])
, ParBreak
, Text "Second"
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 parbreak(), 
                 text(body: [First]), 
                 parbreak(), 
                 place(alignment: Axes(right, bottom), 
                       body: text(body: [Placed])), 
                 parbreak(), 
                 text(body: [Second]), 
                 parbreak() })
