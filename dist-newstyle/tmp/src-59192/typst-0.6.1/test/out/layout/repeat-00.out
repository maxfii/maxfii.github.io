--- parse tree ---
[ Code
    "test/typ/layout/repeat-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/repeat-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/repeat-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/layout/repeat-00.typ"
    ( line 3 , column 2 )
    (Let
       (BasicBind (Just (Identifier "sections")))
       (Array
          [ Reg
              (Array
                 [ Reg (Literal (String "Introduction")) , Reg (Literal (Int 1)) ])
          , Reg
              (Array
                 [ Reg (Literal (String "Approach")) , Reg (Literal (Int 1)) ])
          , Reg
              (Array
                 [ Reg (Literal (String "Evaluation")) , Reg (Literal (Int 3)) ])
          , Reg
              (Array
                 [ Reg (Literal (String "Discussion")) , Reg (Literal (Int 15)) ])
          , Reg
              (Array
                 [ Reg (Literal (String "Related Work")) , Reg (Literal (Int 16)) ])
          , Reg
              (Array
                 [ Reg (Literal (String "Conclusion")) , Reg (Literal (Int 253)) ])
          ]))
, ParBreak
, Code
    "test/typ/layout/repeat-00.typ"
    ( line 12 , column 2 )
    (For
       (BasicBind (Just (Identifier "section")))
       (Ident (Identifier "sections"))
       (Block
          (Content
             [ SoftBreak
             , Code
                 "test/typ/layout/repeat-00.typ"
                 ( line 13 , column 4 )
                 (FuncCall
                    (FieldAccess
                       (Ident (Identifier "at")) (Ident (Identifier "section")))
                    [ NormalArg (Literal (Int 0)) ])
             , Space
             , Code
                 "test/typ/layout/repeat-00.typ"
                 ( line 13 , column 19 )
                 (FuncCall
                    (Ident (Identifier "box"))
                    [ KeyValArg (Identifier "width") (Literal (Numeric 1.0 Fr))
                    , NormalArg
                        (FuncCall (Ident (Identifier "repeat")) [ BlockArg [ Text "." ] ])
                    ])
             , Space
             , Code
                 "test/typ/layout/repeat-00.typ"
                 ( line 13 , column 47 )
                 (FuncCall
                    (FieldAccess
                       (Ident (Identifier "at")) (Ident (Identifier "section")))
                    [ NormalArg (Literal (Int 1)) ])
             , Space
             , HardBreak
             ])))
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 parbreak(), 
                 text(body: [
]), 
                 text(body: [Introduction]), 
                 text(body: [ ]), 
                 box(body: repeat(body: text(body: [.])), 
                     width: 1.0fr), 
                 text(body: [ ]), 
                 text(body: [1]), 
                 text(body: [ ]), 
                 linebreak(), 
                 text(body: [
]), 
                 text(body: [Approach]), 
                 text(body: [ ]), 
                 box(body: repeat(body: text(body: [.])), 
                     width: 1.0fr), 
                 text(body: [ ]), 
                 text(body: [1]), 
                 text(body: [ ]), 
                 linebreak(), 
                 text(body: [
]), 
                 text(body: [Evaluation]), 
                 text(body: [ ]), 
                 box(body: repeat(body: text(body: [.])), 
                     width: 1.0fr), 
                 text(body: [ ]), 
                 text(body: [3]), 
                 text(body: [ ]), 
                 linebreak(), 
                 text(body: [
]), 
                 text(body: [Discussion]), 
                 text(body: [ ]), 
                 box(body: repeat(body: text(body: [.])), 
                     width: 1.0fr), 
                 text(body: [ ]), 
                 text(body: [15]), 
                 text(body: [ ]), 
                 linebreak(), 
                 text(body: [
]), 
                 text(body: [Related Work]), 
                 text(body: [ ]), 
                 box(body: repeat(body: text(body: [.])), 
                     width: 1.0fr), 
                 text(body: [ ]), 
                 text(body: [16]), 
                 text(body: [ ]), 
                 linebreak(), 
                 text(body: [
]), 
                 text(body: [Conclusion]), 
                 text(body: [ ]), 
                 box(body: repeat(body: text(body: [.])), 
                     width: 1.0fr), 
                 text(body: [ ]), 
                 text(body: [253]), 
                 text(body: [ ]), 
                 linebreak(), 
                 parbreak() })
