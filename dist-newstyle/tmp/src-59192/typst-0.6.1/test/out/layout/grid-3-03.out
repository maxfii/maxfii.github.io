--- parse tree ---
[ Code
    "test/typ/layout/grid-3-03.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/grid-3-03.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/grid-3-03.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/layout/grid-3-03.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 5.0 Cm))
       , KeyValArg (Identifier "height") (Literal (Numeric 2.25 Cm))
       ])
, SoftBreak
, Code
    "test/typ/layout/grid-3-03.typ"
    ( line 4 , column 2 )
    (FuncCall
       (Ident (Identifier "grid"))
       [ KeyValArg
           (Identifier "columns")
           (Times
              (Literal (Int 4)) (Array [ Reg (Literal (Numeric 1.0 Fr)) ]))
       , KeyValArg (Identifier "row-gutter") (Literal (Numeric 10.0 Pt))
       , KeyValArg
           (Identifier "column-gutter")
           (Array
              [ Reg (Literal (Numeric 0.0 Pt))
              , Reg (Literal (Numeric 10.0 Percent))
              ])
       , NormalArg (Block (Content [ Text "A" ]))
       , NormalArg (Block (Content [ Text "B" ]))
       , NormalArg (Block (Content [ Text "C" ]))
       , NormalArg (Block (Content [ Text "D" ]))
       , NormalArg
           (FuncCall
              (Ident (Identifier "grid"))
              [ KeyValArg (Identifier "columns") (Literal (Int 2))
              , NormalArg (Block (Content [ Text "A" ]))
              , NormalArg (Block (Content [ Text "B" ]))
              , NormalArg
                  (Times
                     (Block (Content [ Text "C" , HardBreak ])) (Literal (Int 3)))
              , NormalArg (Block (Content [ Text "D" ]))
              ])
       , NormalArg
           (FuncCall
              (Ident (Identifier "align"))
              [ NormalArg (Ident (Identifier "top"))
              , NormalArg
                  (FuncCall
                     (Ident (Identifier "rect"))
                     [ KeyValArg (Identifier "inset") (Literal (Numeric 0.0 Pt))
                     , KeyValArg (Identifier "fill") (Ident (Identifier "eastern"))
                     , NormalArg
                         (FuncCall
                            (Ident (Identifier "align"))
                            [ NormalArg (Ident (Identifier "right"))
                            , BlockArg [ Text "LoL" ]
                            ])
                     ])
              ])
       , NormalArg (Block (Content [ Text "rofl" ]))
       , NormalArg
           (Times
              (Block (Content [ Text "E" , HardBreak ])) (Literal (Int 4)))
       ])
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
]), 
                 grid(children: (text(body: [A]), 
                                 text(body: [B]), 
                                 text(body: [C]), 
                                 text(body: [D]), 
                                 grid(children: (text(body: [A]), 
                                                 text(body: [B]), 
                                                 { text(body: [C]), 
                                                   linebreak(), 
                                                   text(body: [C]), 
                                                   linebreak(), 
                                                   text(body: [C]), 
                                                   linebreak() }, 
                                                 text(body: [D])), 
                                      columns: 2), 
                                 align(alignment: top, 
                                       body: rect(body: align(alignment: right, 
                                                              body: text(body: [LoL])), 
                                                  fill: rgb(13%,61%,67%,100%), 
                                                  inset: 0.0pt)), 
                                 text(body: [rofl]), 
                                 { text(body: [E]), 
                                   linebreak(), 
                                   text(body: [E]), 
                                   linebreak(), 
                                   text(body: [E]), 
                                   linebreak(), 
                                   text(body: [E]), 
                                   linebreak() }), 
                      column-gutter: (0.0pt, 10%), 
                      columns: (1.0fr, 
                                1.0fr, 
                                1.0fr, 
                                1.0fr), 
                      row-gutter: 10.0pt), 
                 parbreak() })
