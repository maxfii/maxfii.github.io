--- parse tree ---
[ Code
    "test/typ/layout/par-justify-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/par-justify-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/par-justify-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Code
    "test/typ/layout/par-justify-00.typ"
    ( line 2 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 180.0 Pt)) ])
, SoftBreak
, Code
    "test/typ/layout/par-justify-00.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "block"))
       [ KeyValArg (Identifier "spacing") (Literal (Numeric 5.0 Pt)) ])
, SoftBreak
, Code
    "test/typ/layout/par-justify-00.typ"
    ( line 4 , column 2 )
    (Set
       (Ident (Identifier "par"))
       [ KeyValArg (Identifier "justify") (Literal (Boolean True))
       , KeyValArg
           (Identifier "first-line-indent") (Literal (Numeric 14.0 Pt))
       , KeyValArg (Identifier "leading") (Literal (Numeric 5.0 Pt))
       ])
, ParBreak
, Text "This"
, Space
, Text "text"
, Space
, Text "is"
, Space
, Text "justified,"
, Space
, Text "meaning"
, Space
, Text "that"
, Space
, Text "spaces"
, Space
, Text "are"
, Space
, Text "stretched"
, Space
, Text "so"
, Space
, Text "that"
, Space
, Text "the"
, Space
, Text "text"
, SoftBreak
, Text "forms"
, Space
, Text "a"
, Space
, Quote '"'
, Text "block"
, Quote '"'
, Space
, Text "with"
, Space
, Text "flush"
, Space
, Text "edges"
, Space
, Text "at"
, Space
, Text "both"
, Space
, Text "sides"
, Text "."
, ParBreak
, Text "First"
, Space
, Text "line"
, Space
, Text "indents"
, Space
, Text "and"
, Space
, Text "hyphenation"
, Space
, Text "play"
, Space
, Text "nicely"
, Space
, Text "with"
, Space
, Text "justified"
, Space
, Text "text"
, Text "."
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
]), 
                 text(body: [
]), 
                 parbreak(), 
                 text(body: [This text is justified, meaning that spaces are stretched so that the text
forms a “block” with flush edges at both sides.]), 
                 parbreak(), 
                 text(body: [First line indents and hyphenation play nicely with justified text.]), 
                 parbreak() })
