--- parse tree ---
[ Code
    "test/typ/text/linebreak-obj-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/text/linebreak-obj-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/text/linebreak-obj-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/text/linebreak-obj-01.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 85.0 Pt)) ])
, ParBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text "."
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text "!"
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text "?"
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text ","
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text ";"
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text ":"
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text "-"
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text "\8211"
, Space
, HardBreak
, Text "We"
, Space
, Text "prove"
, Space
, Equation False [ Text "1" , Text "<" , Text "2" ]
, Text "\8212"
, Space
, HardBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 parbreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [. ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [! ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [? ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [, ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [; ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [: ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [- ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [– ]), 
                 linebreak(), 
                 text(body: [We prove ]), 
                 math.equation(block: false, 
                               body: { text(body: [1]), 
                                       text(body: [<]), 
                                       text(body: [2]) }, 
                               numbering: none), 
                 text(body: [— ]), 
                 linebreak() })
