--- parse tree ---
[ Code
    "test/typ/text/fallback-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/text/fallback-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/text/fallback-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Text "A\128512B"
, ParBreak
, Comment
, Text "\1583\1593"
, Space
, Text "\1575\1604\1606\1589"
, Space
, Text "\1610\1605\1591\1585"
, Space
, Text "\1593\1604\1610\1603"
, ParBreak
, Comment
, Text "\1576\128008\128512\1587\1605"
, ParBreak
, Comment
, Text "A\1576\128512\127966\1587\1605B"
, ParBreak
, Comment
, Text "01\65039\8419\&2"
, ParBreak
, Comment
, Text "A\128008\4850\4638B"
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [A😀B]), 
                 parbreak(), 
                 text(body: [دع النص يمطر عليك]), 
                 parbreak(), 
                 text(body: [ب🐈😀سم]), 
                 parbreak(), 
                 text(body: [Aب😀🏞سمB]), 
                 parbreak(), 
                 text(body: [01️⃣2]), 
                 parbreak(), 
                 text(body: [A🐈ዲሞB]), 
                 parbreak() })
