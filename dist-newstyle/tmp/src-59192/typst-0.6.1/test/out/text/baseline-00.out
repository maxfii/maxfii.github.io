--- parse tree ---
[ Code
    "test/typ/text/baseline-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/text/baseline-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/text/baseline-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, SoftBreak
, EmDash
, SoftBreak
, Text "Hi"
, Space
, Code
    "test/typ/text/baseline-00.typ"
    ( line 5 , column 5 )
    (FuncCall
       (Ident (Identifier "text"))
       [ NormalArg (Literal (Numeric 1.5 Em)) , BlockArg [ Text "You" ] ])
, Text ","
, Space
, Code
    "test/typ/text/baseline-00.typ"
    ( line 5 , column 24 )
    (FuncCall
       (Ident (Identifier "text"))
       [ NormalArg (Literal (Numeric 0.75 Em))
       , BlockArg
           [ Text "how" , Space , Text "are" , Space , Text "you?" ]
       ])
, ParBreak
, Text "Our"
, Space
, Text "cockatoo"
, Space
, Text "was"
, Space
, Text "one"
, Space
, Text "of"
, Space
, Text "the"
, SoftBreak
, Code
    "test/typ/text/baseline-00.typ"
    ( line 8 , column 2 )
    (FuncCall
       (Ident (Identifier "text"))
       [ KeyValArg
           (Identifier "baseline") (Negated (Literal (Numeric 0.2 Em)))
       , BlockArg
           [ Code
               "test/typ/text/baseline-00.typ"
               ( line 8 , column 26 )
               (FuncCall
                  (Ident (Identifier "box"))
                  [ NormalArg
                      (FuncCall
                         (Ident (Identifier "circle"))
                         [ KeyValArg (Identifier "radius") (Literal (Numeric 2.0 Pt)) ])
                  ])
           , Space
           , Text "first"
           ]
       ])
, SoftBreak
, Code
    "test/typ/text/baseline-00.typ"
    ( line 9 , column 2 )
    (FuncCall
       (Ident (Identifier "text"))
       [ KeyValArg (Identifier "baseline") (Literal (Numeric 0.2 Em))
       , BlockArg
           [ Text "birds"
           , Space
           , Code
               "test/typ/text/baseline-00.typ"
               ( line 9 , column 31 )
               (FuncCall
                  (Ident (Identifier "box"))
                  [ NormalArg
                      (FuncCall
                         (Ident (Identifier "circle"))
                         [ KeyValArg (Identifier "radius") (Literal (Numeric 2.0 Pt)) ])
                  ])
           ]
       ])
, SoftBreak
, Text "that"
, Space
, Text "ever"
, Space
, Text "learned"
, Space
, Text "to"
, Space
, Text "mimic"
, Space
, Text "a"
, Space
, Text "human"
, Space
, Text "voice"
, Text "."
, ParBreak
, EmDash
, SoftBreak
, Text "Hey"
, Space
, Code
    "test/typ/text/baseline-00.typ"
    ( line 13 , column 6 )
    (FuncCall
       (Ident (Identifier "box"))
       [ KeyValArg
           (Identifier "baseline") (Literal (Numeric 40.0 Percent))
       , NormalArg
           (FuncCall
              (Ident (Identifier "image"))
              [ NormalArg (Literal (String "test/assets/files/tiger.jpg"))
              , KeyValArg (Identifier "width") (Literal (Numeric 1.5 Cm))
              ])
       ])
, Space
, Text "there!"
, ParBreak
]
--- evaluated ---
document(body: { text(body: [
]), 
                 text(body: [
—
Hi ]), 
                 text(body: text(body: [You]), 
                      size: 1.5em), 
                 text(body: [, ]), 
                 text(body: text(body: [how are you?]), 
                      size: 0.75em), 
                 parbreak(), 
                 text(body: [Our cockatoo was one of the
]), 
                 text(baseline: -0.2em, 
                      body: { box(body: circle(radius: 2.0pt)), 
                              text(body: [ first]) }), 
                 text(body: [
]), 
                 text(baseline: 0.2em, 
                      body: { text(body: [birds ]), 
                              box(body: circle(radius: 2.0pt)) }), 
                 text(body: [
that ever learned to mimic a human voice.]), 
                 parbreak(), 
                 text(body: [—
Hey ]), 
                 box(baseline: 40%, 
                     body: image(path: "test/assets/files/tiger.jpg", 
                                 width: 1.5cm)), 
                 text(body: [ there!]), 
                 parbreak() })
